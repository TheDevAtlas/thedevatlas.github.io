---
import Layout from "../../layouts/Layout.astro";
import { collections } from "../../data/collections.js";

export function getStaticPaths() {
  return collections.map((entry) => ({
    params: { slug: entry.slug },
  }));
}

const { slug } = Astro.params;
const collection = collections.find((entry) => entry.slug === slug);

if (!collection) {
  return Astro.redirect('/collections');
}

const { body = {} } = collection;
const { overview, spotlight, sections = [] } = body;
---

<Layout title={`${collection.title} Collection | TheDevAtlas`} description={collection.description}>
  <main class="collection-page">
    <header class="hero">
      <p class="eyebrow">{collection.title}</p>
      <h1>{collection.subtitle}</h1>
      <p class="overview">{overview ?? collection.description}</p>
      <div class="hero-actions">
        {collection.cta && (
          <a class="primary" href={collection.cta.href}>{collection.cta.label}</a>
        )}
        <a class="secondary" href="/workshop">Search all content</a>
      </div>
    </header>

    {spotlight && (
      <section class="spotlight">
        <div class="spotlight-card">
          <h2>{spotlight.title}</h2>
          <p>{spotlight.description}</p>
          <div class="spotlight-actions">
            <a class="primary" href={spotlight.primary.href}>{spotlight.primary.label}</a>
            {spotlight.secondary && (
              <a class="ghost" href={spotlight.secondary.href}>{spotlight.secondary.label}</a>
            )}
          </div>
        </div>
      </section>
    )}

    {sections.map((section) => (
      <section class="section-block" id={section.id ?? section.title.toLowerCase().replace(/[^a-z0-9]+/g, '-') }>
        <header>
          <h2>{section.title}</h2>
          <p>{section.description}</p>
        </header>
        <div class="items">
          {section.items?.map((item) => (
            <article class="item-card">
              <h3>{item.title}</h3>
              <p>{item.detail}</p>
              {item.action && (
                <a class="cta" href={item.action.href}>{item.action.label}</a>
              )}
            </article>
          ))}
        </div>
      </section>
    ))}
  </main>
</Layout>

<style>
  .collection-page {
    max-width: 1100px;
    margin: 0 auto;
    padding: clamp(4rem, 8vw, 6rem) clamp(1.5rem, 4vw, 3.5rem) clamp(6rem, 10vw, 7rem);
    display: flex;
    flex-direction: column;
    gap: clamp(2.75rem, 7vw, 4.5rem);
  }

  .hero {
    background: rgba(15, 23, 42, 0.8);
    border-radius: 28px;
    border: 1px solid rgba(99, 102, 241, 0.22);
    box-shadow: 0 22px 48px rgba(15, 23, 42, 0.45);
    padding: clamp(2.75rem, 6vw, 3.75rem);
    display: flex;
    flex-direction: column;
    gap: 1.25rem;
  }

  .eyebrow {
    text-transform: uppercase;
    letter-spacing: 0.32em;
    font-size: 0.75rem;
    font-weight: 600;
    color: rgba(148, 163, 184, 0.8);
  }

  h1 {
    margin: 0;
    font-size: clamp(2.6rem, 4.5vw, 3.4rem);
  }

  .overview {
    margin: 0;
    max-width: 70ch;
    color: rgba(226, 232, 240, 0.85);
    font-size: 1.08rem;
    line-height: 1.65;
  }

  .hero-actions {
    display: flex;
    flex-wrap: wrap;
    gap: 0.85rem;
  }

  .primary,
  .secondary,
  .ghost {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0.9rem 1.9rem;
    border-radius: 999px;
    font-weight: 600;
    text-decoration: none;
    transition: transform 160ms ease, box-shadow 160ms ease, border 160ms ease;
  }

  .primary {
    background: linear-gradient(120deg, #38bdf8, #6366f1);
    color: #0b1120;
    border: none;
    box-shadow: 0 18px 36px rgba(56, 189, 248, 0.32);
  }

  .primary:hover,
  .primary:focus-visible {
    transform: translateY(-2px);
  }

  .secondary {
    border: 1px solid rgba(56, 189, 248, 0.35);
    background: rgba(56, 189, 248, 0.12);
    color: rgba(186, 230, 253, 0.98);
  }

  .secondary:hover,
  .secondary:focus-visible {
    border-color: rgba(168, 85, 247, 0.45);
    color: rgba(224, 231, 255, 0.95);
  }

  .ghost {
    border: 1px solid rgba(148, 163, 184, 0.35);
    background: transparent;
    color: rgba(226, 232, 240, 0.82);
  }

  .ghost:hover,
  .ghost:focus-visible {
    border-color: rgba(168, 85, 247, 0.4);
    color: rgba(224, 231, 255, 0.95);
  }

  .spotlight {
    display: grid;
    gap: 1.5rem;
  }

  .spotlight-card {
    background: rgba(15, 23, 42, 0.78);
    border-radius: 24px;
    border: 1px solid rgba(99, 102, 241, 0.24);
    padding: clamp(2.25rem, 5vw, 3rem);
    box-shadow: 0 20px 44px rgba(15, 23, 42, 0.45);
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .spotlight-card h2 {
    margin: 0;
    font-size: 1.75rem;
  }

  .spotlight-card p {
    margin: 0;
    color: rgba(226, 232, 240, 0.85);
    line-height: 1.6;
  }

  .spotlight-actions {
    display: flex;
    flex-wrap: wrap;
    gap: 0.85rem;
  }

  .section-block {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .section-block header {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .section-block h2 {
    margin: 0;
    font-size: 1.8rem;
  }

  .section-block p {
    margin: 0;
    color: rgba(148, 163, 184, 0.85);
    max-width: 68ch;
  }

  .items {
    display: grid;
    gap: clamp(1rem, 3vw, 1.5rem);
    grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
  }

  .item-card {
    background: rgba(15, 23, 42, 0.72);
    border-radius: 20px;
    border: 1px solid rgba(56, 189, 248, 0.15);
    padding: clamp(1.6rem, 4vw, 2.1rem);
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    box-shadow: 0 16px 36px rgba(15, 23, 42, 0.4);
  }

  .item-card h3 {
    margin: 0;
    font-size: 1.25rem;
  }

  .item-card p {
    margin: 0;
    color: rgba(226, 232, 240, 0.8);
    line-height: 1.55;
  }

  .item-card .cta {
    margin-top: auto;
    color: #38bdf8;
    font-weight: 600;
    text-decoration: none;
  }

  .item-card .cta:hover,
  .item-card .cta:focus-visible {
    color: #a855f7;
  }

  @media (max-width: 720px) {
    .hero-actions,
    .spotlight-actions {
      flex-direction: column;
      align-items: stretch;
    }

    .primary,
    .secondary,
    .ghost {
      width: 100%;
    }
  }
</style>

